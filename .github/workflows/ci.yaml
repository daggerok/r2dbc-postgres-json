# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: ci
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - run: ./mvnw -B dependency:resolve-plugins dependency:resolve
    - run: ./mvnw -P pg-stop ; ./mvnw -P pg-start
    - run: ./mvnw test
    - run: ./mvnw -P pg-stop ; ./mvnw -P pg-stop
  integration-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: ci
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - uses: actions/cache@v1
      with:
        path: ~/.n*
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/setup-node@v2
    - run: ./mvnw -B dependency:resolve-plugins dependency:resolve
    - run: ./mvnw -P pg-stop ; ./mvnw -P pg-start
    - run: ./mvnw clean package -DskipTests
    - run: java -jar ./target/*.jar &
    - run: npx wait-port 8080
    - run: sudo apt-get install -y curl
    - run: curl -sS localhost:8080/event-stream/00000000-0000-0000-0000-000000000001 &
    - run: curl -iv localhost:8080/event-stream &
    - run: curl -sSH'Content-Type:application/json' localhost:8080/append-event -d'{"aggregateId":"00000000-0000-0000-0000-000000000001","jsonData":"{\"aggregateId\":\"00000000-0000-0000-0000-000000000001\",\"eventType\":\"VisitorRegisteredEvent\",\"name\":\"Test visitor\"}"}'
    - run: curl -sSH'Content-Type:application/json' localhost:8080/append-event -d'{"aggregateId":"00000000-0000-0000-0000-000000000001","jsonData":"{\"aggregateId\":\"00000000-0000-0000-0000-000000000001\",\"eventType\":\"PassCardDeliveredEvent\"}"}'
    - run: curl -sSH'Content-Type:application/json' 0:8080/append-event -d'{"aggregateId":"00000000-0000-0000-0000-000000000001","jsonData":"{\"aggregateId\":\"00000000-0000-0000-0000-000000000001\",\"eventType\":\"EnteredTheDoorEvent\",\"doorId\":\"IN-1\"}"}'
    - run: curl -sSH'Content-Type:application/json' 0:8080/append-event -d'{"aggregateId":"00000000-0000-0000-0000-000000000001","jsonData":"{\"aggregateId\":\"00000000-0000-0000-0000-000000000001\",\"eventType\":\"EnteredTheDoorEvent\",\"doorId\":\"IN-2\"}"}'
    - run: curl -sSH'Content-Type:application/json' 0:8080/append-event -d'{"aggregateId":"00000000-0000-0000-0000-000000000001","jsonData":"{\"aggregateId\":\"00000000-0000-0000-0000-000000000001\",\"eventType\":\"EnteredTheDoorEvent\",\"doorId\":\"OUT-2\"}"}'
    - run: ./mvnw -P pg-stop ; ./mvnw -P pg-stop
